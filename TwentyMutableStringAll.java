package CJava;

import java.util.StringTokenizer;
class Student{ // ---------------------------> it refers to line no 86
	String s1 = "Ramu";
	int a = 1;
}

public class TwentyMutableStringAll {

	public static void main(String[] args) {
		
//Task 1:
		
		StringBuffer sb1 = new StringBuffer("Bhagyesh");
//		StringBuilder sb1 = new StringBuilder("Bhagyesh") // Here we can use this one also both are same
		System.out.println(sb1);
		sb1.append("Kakkirala");
		System.out.println(sb1);
		
		
//Task 2: Capacity of stringBuffer & StringBuilder
//        initial capacity of the string buffer is 16. if the capacity is filled to its full new capacity
//		  would be generated, always equal to "Old capacity * 2 + 2".
		
		
		StringBuffer sb2 = new StringBuffer();
//		StringBuilder sb1 = new StringBuilder("Bhagyesh") // Here we can use this one also both are same
		System.out.println(sb2.capacity());
		sb2.append("Dhoni is the best capitan");
		System.out.println(sb2);
		System.out.println(sb2.capacity());
		sb2.append("Kohli is the Good Batsman");
		System.out.println(sb2);
		System.out.println(sb2.capacity());
		
		
		
//Type 3: Ensure Capacity method
//It is used to ensure the given capacity for the StringBuffer or builder
		
		
		StringBuffer sb3 = new StringBuffer();
		sb3.ensureCapacity(60);
		System.out.println(sb3.capacity());
		sb3.append("123456789123456789123456789123456789123456789123456789");
		System.out.println(sb3.capacity());
		sb3.append("123456789123456789123456789");
		System.out.println(sb3.capacity());

		
//Diffirence between StringBuffer and StringBuilder
		
//		String buffer is used to create mutable string
//		initial capacity of string buffer is 16
//		String buffer is "thread safe"
//		String buffer is synchronized
//		string buffer is not suitible for multithreaded enviornment
		
//		String builder is used to create mutable string
//		initial capacity of string builder is 16
//		String builder is not "Thread safe"
//		String bulider is suitible for multithreaded enivornment
//		string bulider is not synchronized
		

		
//Task 4: StringTokenizer
//		  it is used to chop or cut the strings at the particular characters and produce smaller tokens 
		

		StringTokenizer st1 = new StringTokenizer("Kakkirala Venkata Bhagyesh"," ");
		while(st1.hasMoreTokens()==true)
		{
			System.out.println(st1.nextToken());
			
		}
		
		String s1 = new String("Ravi");
		System.out.println(s1);
		
// when we try to print the reference variable class name at hashcode based on the address would be printed 
// note hashcode is the unique number or code which is generated by using hashing algorithms.
		
		Student s2 = new Student();
		System.out.println(s2);
		
	}

}
